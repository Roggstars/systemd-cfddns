#!/bin/bash

# Forked from benkulbertis/cloudflare-update-record.sh
# CHANGE THESE

# Global API Key (Deprecated + Dangerous)
# Note: Please be caution as the Global API key can have unlimited access to **all** domain and features in your account.
auth_email="john.appleseed@example.org"            # The email used to login 'https://dash.cloudflare.com'
auth_key="f1nd7h47fuck1n6k3y1ncl0udfl4r3c0n50l3"   # Top right corner, "My profile" > "Global API Key"

# API Token (Recommended)
#####                                                                             #####
# WARNING: If you put any value inside the API Token variable,                        #
#            the script will automatically use the token and omit the Global API key, #
#            regardless if the Global API key is defined or not.                      #
#####                                                                             #####
auth_token="xxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Domain and DNS record for synchronization
zone_identifier="f1nd7h3fuck1n6z0n31d3n71f13r4l50" # Can be found in the "Overview" tab of your domain
record_name="ipv6.example.org"                     # Which record you want to be synced

# DO NOT CHANGE LINES BELOW
ip=$(curl -6 https://icanhazip.com/)

# SCRIPT START
echo "[Cloudflare DDNS] Check Initiated"

# The execution of update
if [[ ! -z "${auth_token}" ]]; then
  header_auth_paramheader=( -H "Authorization: Bearer ${auth_token}" )
else
  header_auth_paramheader=( -H "X-Auth-Email: ${auth_email}" -H "X-Auth-Key: ${auth_key}" )
fi

# Seek for the record
seek_current_dns_value_cmd=( curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${zone_identifier}/dns_records?name=${record_name}&type=._._seek_dns_type_._." "${header_auth_paramheader[@]}" -H 'Content-Type: application/json' )
record="${seek_current_dns_value_cmd//._._seek_dns_type_._./AAAA}"

# Can't do anything without the record
if [[ "${record}" == *'"count":0'* ]]; then
  >&2 echo -e "[Cloudflare DDNS] Record does not exist, perhaps create one first?"
  exit 1
fi

# Set existing IP address from the fetched record
old_ip=$(echo "${record}" | sed 's/.*"content":"//;s/".*//')

# Compare if they're the same
if [ "${ip}" == "${old_ip}" ]; then
  echo "[Cloudflare DDNS] IP has not changed."
  exit 0
fi

# Set the record identifier from result
record_identifier=$(echo "${record}" | sed 's/.*"id":"//;s/".*//')

# The secret sause for executing the update
json_data_v6='{"id":"'${zone_identifier}'","type":"AAAA","proxied":false,"name":"'${record_name}'","content":"'${ip4}'","ttl":120}'
update_cmd=( curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${zone_identifier}/dns_records/${record4_identifier}" "${header_auth_paramheader[@]}" -H 'Content-Type: application/json' )

# Execution result
update="${update_cmd[@]}" --data "$json_data_v6"

# The moment of truth
case "$update" in
*'"success":false'*)
  >&2 echo -e "[Cloudflare DDNS] Update failed for ${record_identifier}.\n\nDUMPING RESULTS:\n${update}"
  exit 1;;
*)
  echo "[Cloudflare DDNS] IPv6 address '${ip}' has been synced to Cloudflare.";;
esac
